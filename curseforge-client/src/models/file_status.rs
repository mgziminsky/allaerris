/*
 * CurseForge API
 *
 * HTTP API for CurseForge
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Default, Copy, Clone, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum FileStatus {
    #[default]
    #[serde(rename = "1")]
    Processing,
    #[serde(rename = "2")]
    ChangesRequired,
    #[serde(rename = "3")]
    UnderReview,
    #[serde(rename = "4")]
    Approved,
    #[serde(rename = "5")]
    Rejected,
    #[serde(rename = "6")]
    MalwareDetected,
    #[serde(rename = "7")]
    Deleted,
    #[serde(rename = "8")]
    Archived,
    #[serde(rename = "9")]
    Testing,
    #[serde(rename = "10")]
    Released,
    #[serde(rename = "11")]
    ReadyForReview,
    #[serde(rename = "12")]
    Deprecated,
    #[serde(rename = "13")]
    Baking,
    #[serde(rename = "14")]
    AwaitingPublishing,
    #[serde(rename = "15")]
    FailedPublishing,
}

impl std::fmt::Display for FileStatus {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        f.write_str(match self {
            Self::Processing => "1",
            Self::ChangesRequired => "2",
            Self::UnderReview => "3",
            Self::Approved => "4",
            Self::Rejected => "5",
            Self::MalwareDetected => "6",
            Self::Deleted => "7",
            Self::Archived => "8",
            Self::Testing => "9",
            Self::Released => "10",
            Self::ReadyForReview => "11",
            Self::Deprecated => "12",
            Self::Baking => "13",
            Self::AwaitingPublishing => "14",
            Self::FailedPublishing => "15",
        })
    }
}

