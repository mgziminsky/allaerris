/*
 * CurseForge API
 *
 * HTTP API for CurseForge
 *
 * The version of the OpenAPI document: 1.0.240719
 * 
 * Generated by: https://openapi-generator.tech
 */

#[allow(unused_imports)]
use crate::models;

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Mod {
    /// The mod id
    #[serde(rename = "id")]
    pub id: u64,
    /// The game id this mod is for
    #[serde(rename = "gameId")]
    pub game_id: u64,
    /// The name of the mod
    #[serde(rename = "name")]
    pub name: String,
    /// The mod slug that would appear in the URL
    #[serde(rename = "slug")]
    pub slug: String,
    #[serde(rename = "links")]
    pub links: models::ModLinks,
    /// Mod summary
    #[serde(rename = "summary")]
    pub summary: String,
    #[serde(rename = "status")]
    pub status: models::ModStatus,
    /// Number of downloads for the mod
    #[serde(rename = "downloadCount")]
    pub download_count: u64,
    /// Whether the mod is included in the featured mods list
    #[serde(rename = "isFeatured", skip_serializing_if = "Option::is_none")]
    pub is_featured: Option<serde_json::Value>,
    /// The main category of the mod as it was chosen by the mod author
    #[serde(rename = "primaryCategoryId")]
    pub primary_category_id: u64,
    /// List of categories that this mod is related to
    #[serde(rename = "categories", default)]
    pub categories: Vec<models::Category>,
    /// The class id this mod belongs to
    #[serde(rename = "classId", skip_serializing_if = "Option::is_none")]
    pub class_id: Option<u64>,
    /// List of the mod's authors
    #[serde(rename = "authors", default)]
    pub authors: Vec<models::ModAuthor>,
    #[serde(rename = "logo")]
    pub logo: models::ModAsset,
    /// List of screenshots assets
    #[serde(rename = "screenshots", default)]
    pub screenshots: Vec<models::ModAsset>,
    /// The id of the main file of the mod
    #[serde(rename = "mainFileId")]
    pub main_file_id: u64,
    /// List of latest files of the mod
    #[serde(rename = "latestFiles", default)]
    pub latest_files: Vec<models::File>,
    /// List of file related details for the latest files of the mod
    #[serde(rename = "latestFileIndexes", default)]
    pub latest_file_indexes: Vec<models::FileIndex>,
    /// The creation date of the mod
    #[serde(rename = "dateCreated")]
    pub date_created: String,
    /// The last time the mod was modified
    #[serde(rename = "dateModified")]
    pub date_modified: String,
    /// The release date of the mod
    #[serde(rename = "dateReleased")]
    pub date_released: String,
    /// Is mod allowed to be distributed
    #[serde(rename = "allowModDistribution", skip_serializing_if = "Option::is_none")]
    pub allow_mod_distribution: Option<bool>,
    /// The mod popularity rank for the game
    #[serde(rename = "gamePopularityRank")]
    pub game_popularity_rank: u32,
    /// Is the mod available for search. This can be false when a mod is experimental, in a deleted state or has only alpha files
    #[serde(rename = "isAvailable")]
    pub is_available: bool,
    /// The mod's thumbs up count
    #[serde(rename = "thumbsUpCount")]
    pub thumbs_up_count: u32,
}

impl Mod {
    #[allow(clippy::too_many_arguments)]
    pub fn new(id: u64, game_id: u64, name: String, slug: String, links: models::ModLinks, summary: String, status: models::ModStatus, download_count: u64, primary_category_id: u64, categories: Vec<models::Category>, authors: Vec<models::ModAuthor>, logo: models::ModAsset, screenshots: Vec<models::ModAsset>, main_file_id: u64, latest_files: Vec<models::File>, latest_file_indexes: Vec<models::FileIndex>, date_created: String, date_modified: String, date_released: String, game_popularity_rank: u32, is_available: bool, thumbs_up_count: u32) -> Self {
        Self {
            id,
            game_id,
            name,
            slug,
            links,
            summary,
            status,
            download_count,
            primary_category_id,
            categories,
            authors,
            logo,
            screenshots,
            main_file_id,
            latest_files,
            latest_file_indexes,
            date_created,
            date_modified,
            date_released,
            game_popularity_rank,
            is_available,
            thumbs_up_count,
            is_featured: None,
            class_id: None,
            allow_mod_distribution: None,
        }
    }
}

