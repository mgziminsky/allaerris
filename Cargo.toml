[workspace]
resolver = "2"
members = ["cli", "lib", "*-client"]

[workspace.dependencies]
anyhow = "1.0"
async-scoped = { version = "0.9", features = ["use-tokio"] }
dirs = "5"
itertools = "0.13"
once_cell = "1.19"
reqwest = { version = "0.12", default-features = false }
serde = "1.0"
serde_json = "1.0"
tokio = { version = "1.38", default-features = false }
url = "2.5"

[workspace.lints.rust]
# Hacky workaround for RA to allow analyzing both `cfg` and `not(cfg)` code
# by defining an `ide` cfg attribute. This allows code completion and assist
# to work, but doesn't enable error checking or recognize imports
unexpected_cfgs = { level = "allow", check-cfg = ['cfg(ide)'] }

[workspace.lints.clippy]
pedantic = { level = "warn", priority = -1 }

cast_lossless = "allow"
default_trait_access = "allow"
doc_markdown = "allow"
enum_glob_use = "allow"
missing_errors_doc = "allow"
module_name_repetitions = "allow"
must_use_candidate = "allow"
similar_names = "allow"
wildcard_imports = "allow"
